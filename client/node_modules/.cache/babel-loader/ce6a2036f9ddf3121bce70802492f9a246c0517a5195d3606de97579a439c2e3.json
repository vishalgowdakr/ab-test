{"ast":null,"code":"import typed from 'typed-function';\nimport { typeOf as _typeOf } from './is.js';\n\n/**\n * Invoke a callback for functions like map and filter with a matching number of arguments\n * @param {function} callback\n * @param {any} value\n * @param {number | number[]} index\n * @param {Array} array\n * @param {string} mappingFnName   The name of the function that is invoking these callbacks, for example \"map\" or \"filter\"\n * @returns {*}\n */\nexport function applyCallback(callback, value, index, array, mappingFnName) {\n  if (typed.isTypedFunction(callback)) {\n    // invoke the typed callback function with the matching number of arguments only\n\n    var args3 = [value, index, array];\n    var signature3 = typed.resolve(callback, args3);\n    if (signature3) {\n      return tryWithArgs(signature3.implementation, args3);\n    }\n    var args2 = [value, index];\n    var signature2 = typed.resolve(callback, args2);\n    if (signature2) {\n      return tryWithArgs(signature2.implementation, args2);\n    }\n    var args1 = [value];\n    var signature1 = typed.resolve(callback, args1);\n    if (signature1) {\n      return tryWithArgs(signature1.implementation, args1);\n    }\n\n    // fallback (will throw an exception)\n    return tryWithArgs(callback, args3);\n  } else {\n    // A regular JavaScript function\n    return callback(value, index, array);\n  }\n\n  /**\n   * @param {function} signature The selected signature of the typed-function\n   * @param {Array} args List with arguments to apply to the selected signature\n   * @returns {*} Returns the return value of the invoked signature\n   * @throws {TypeError} Throws an error when no matching signature was found\n   */\n  function tryWithArgs(signature, args) {\n    try {\n      return signature.apply(signature, args);\n    } catch (err) {\n      var _err$data;\n      // Enrich the error message so the user understands that it took place inside the callback function\n      if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === 'wrongType') {\n        var argsDesc = [];\n        argsDesc.push(\"value: \".concat(_typeOf(value)));\n        if (args.length >= 2) {\n          argsDesc.push(\"index: \".concat(_typeOf(index)));\n        }\n        if (args.length >= 3) {\n          argsDesc.push(\"array: \".concat(_typeOf(array)));\n        }\n        throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"\".concat(callback.name, \"(\").concat(argsDesc.join(', '), \") at index \").concat(JSON.stringify(index)));\n      } else {\n        throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"to function \".concat(callback.name, \": \").concat(err.message));\n      }\n    }\n  }\n}","map":{"version":3,"names":["typed","typeOf","_typeOf","applyCallback","callback","value","index","array","mappingFnName","isTypedFunction","args3","signature3","resolve","tryWithArgs","implementation","args2","signature2","args1","signature1","signature","args","apply","err","_err$data","TypeError","data","category","argsDesc","push","concat","length","name","join","JSON","stringify","message"],"sources":["/home/vishal/Documents/htmx/abtest/node_modules/mathjs/lib/esm/utils/applyCallback.js"],"sourcesContent":["import typed from 'typed-function';\nimport { typeOf as _typeOf } from './is.js';\n\n/**\n * Invoke a callback for functions like map and filter with a matching number of arguments\n * @param {function} callback\n * @param {any} value\n * @param {number | number[]} index\n * @param {Array} array\n * @param {string} mappingFnName   The name of the function that is invoking these callbacks, for example \"map\" or \"filter\"\n * @returns {*}\n */\nexport function applyCallback(callback, value, index, array, mappingFnName) {\n  if (typed.isTypedFunction(callback)) {\n    // invoke the typed callback function with the matching number of arguments only\n\n    var args3 = [value, index, array];\n    var signature3 = typed.resolve(callback, args3);\n    if (signature3) {\n      return tryWithArgs(signature3.implementation, args3);\n    }\n    var args2 = [value, index];\n    var signature2 = typed.resolve(callback, args2);\n    if (signature2) {\n      return tryWithArgs(signature2.implementation, args2);\n    }\n    var args1 = [value];\n    var signature1 = typed.resolve(callback, args1);\n    if (signature1) {\n      return tryWithArgs(signature1.implementation, args1);\n    }\n\n    // fallback (will throw an exception)\n    return tryWithArgs(callback, args3);\n  } else {\n    // A regular JavaScript function\n    return callback(value, index, array);\n  }\n\n  /**\n   * @param {function} signature The selected signature of the typed-function\n   * @param {Array} args List with arguments to apply to the selected signature\n   * @returns {*} Returns the return value of the invoked signature\n   * @throws {TypeError} Throws an error when no matching signature was found\n   */\n  function tryWithArgs(signature, args) {\n    try {\n      return signature.apply(signature, args);\n    } catch (err) {\n      var _err$data;\n      // Enrich the error message so the user understands that it took place inside the callback function\n      if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === 'wrongType') {\n        var argsDesc = [];\n        argsDesc.push(\"value: \".concat(_typeOf(value)));\n        if (args.length >= 2) {\n          argsDesc.push(\"index: \".concat(_typeOf(index)));\n        }\n        if (args.length >= 3) {\n          argsDesc.push(\"array: \".concat(_typeOf(array)));\n        }\n        throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"\".concat(callback.name, \"(\").concat(argsDesc.join(', '), \") at index \").concat(JSON.stringify(index)));\n      } else {\n        throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"to function \".concat(callback.name, \": \").concat(err.message));\n      }\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}