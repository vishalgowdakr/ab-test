{"ast":null,"code":"import * as cookie from 'cookie';\nfunction hasDocumentCookie() {\n  const testingValue = typeof global === 'undefined' ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;\n  if (typeof testingValue === 'boolean') {\n    return testingValue;\n  }\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n  if (typeof cookies === 'string') {\n    return cookie.parse(cookies);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nfunction readCookie(value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const cleanValue = cleanupCookieValue(value);\n  if (!options.doNotParse) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {\n      // At least we tried\n    }\n  }\n  // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n  return value;\n}\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n  return value;\n}\nclass Cookies {\n  constructor(cookies) {\n    let defaultSetOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      const previousCookies = this.cookies;\n      this.cookies = cookie.parse(document.cookie);\n      this._checkChanges(previousCookies);\n    };\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n  _checkChanges(previousCookies) {\n    const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (previousCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(this.cookies[name])\n        });\n      }\n    });\n  }\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n  get(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    return readCookie(this.cookies[name], options);\n  }\n  getAll() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    const result = {};\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n    return result;\n  }\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, stringValue, options);\n    }\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, '', finalOptions);\n    }\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n}\nexport { Cookies as default };","map":{"version":3,"names":["cookie","hasDocumentCookie","testingValue","global","undefined","TEST_HAS_DOCUMENT_COOKIE","document","parseCookies","cookies","parse","readCookie","value","options","arguments","length","cleanValue","cleanupCookieValue","doNotParse","JSON","e","substr","Cookies","constructor","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","_checkChanges","domCookies","_emitChange","params","i","names","Set","Object","keys","concat","forEach","name","_startPolling","pollingInterval","setInterval","_stopPolling","clearInterval","get","doNotUpdate","getAll","result","set","assign","stringValue","stringify","serialize","remove","finalOptions","expires","Date","maxAge","addChangeListener","callback","push","window","cookieStore","addEventListener","removeChangeListener","idx","indexOf","splice","removeEventListener","default"],"sources":["/home/vishal/Documents/htmx/abtest/node_modules/universal-cookie/esm/index.mjs"],"sourcesContent":["import * as cookie from 'cookie';\n\nfunction hasDocumentCookie() {\n    const testingValue = typeof global === 'undefined'\n        ? undefined\n        : global.TEST_HAS_DOCUMENT_COOKIE;\n    if (typeof testingValue === 'boolean') {\n        return testingValue;\n    }\n    // Can we get/set cookies on document.cookie?\n    return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n    if (typeof cookies === 'string') {\n        return cookie.parse(cookies);\n    }\n    else if (typeof cookies === 'object' && cookies !== null) {\n        return cookies;\n    }\n    else {\n        return {};\n    }\n}\nfunction readCookie(value, options = {}) {\n    const cleanValue = cleanupCookieValue(value);\n    if (!options.doNotParse) {\n        try {\n            return JSON.parse(cleanValue);\n        }\n        catch (e) {\n            // At least we tried\n        }\n    }\n    // Ignore clean value if we failed the deserialization\n    // It is not relevant anymore to trim those values\n    return value;\n}\nfunction cleanupCookieValue(value) {\n    // express prepend j: before serializing a cookie\n    if (value && value[0] === 'j' && value[1] === ':') {\n        return value.substr(2);\n    }\n    return value;\n}\n\nclass Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = cookie.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(previousCookies) {\n        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (previousCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(this.cookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n}\n\nexport { Cookies as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}